generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        BigInt        @id(map: "pk_users")
  nickname  String        @unique(map: "uq_users_nickname") @db.VarChar(20)
  loginId   String        @unique(map: "uq_users_login_id") @db.VarChar(20)
  email     String        @unique(map: "uq_users_email") @db.VarChar(255)
  password  String        @db.VarChar(20)
  loginType LoginTypeEnum @map("login_type")
  role      UserRoleEnum  @default(user)
  createdAt DateTime      @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime      @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  deletedAt DateTime?     @map("deleted_at") @db.Timestamptz(6)
  posts     Post[]

  @@map("users")
}

model Post {
  id        BigInt    @id(map: "pk_posts")
  userId    BigInt    @map("user_id") @db.BigInt()
  title     String    @db.VarChar(255)
  content   String    @db.Text
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime  @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz(6)

  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("posts")
}

enum UserRoleEnum {
  user
  admin
}

enum LoginTypeEnum {
  email
}
